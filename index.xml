<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Core Rule Set Documentation</title><link>https://fzipi.github.io/coreruleset-documentation/</link><description>Recent content on Core Rule Set Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://fzipi.github.io/coreruleset-documentation/index.xml" rel="self" type="application/rss+xml"/><item><title>Installing CoreRuleSet</title><link>https://fzipi.github.io/coreruleset-documentation/deployment/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fzipi.github.io/coreruleset-documentation/deployment/install/</guid><description>We are glad you chose OWASP CRS the premier free ModSecurity ruleset. Below you should find all the information you need to properly install CRS. If you are having problems feel free to reach out to our Google Group.
Prerequisites Installing the CRS isn&amp;rsquo;t very hard but it does have one major requirement, ModSecurity. If ModSecurity isn&amp;rsquo;t working properly you will likely run into problems running the CRS. In order to run the 3.</description></item><item><title>Rule IDs</title><link>https://fzipi.github.io/coreruleset-documentation/development/ruleid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fzipi.github.io/coreruleset-documentation/development/ruleid/</guid><description>Why do rule IDs matter? Each rule added to a ModSecurity instance must have a unique ID (in recent versions of modsec). As a result of this it is important that IDs be generated in a preplanned way such that they don't overlap with other rules. This becomes particularly important when it comes to rulesets, like OWASP CRS. Because CRS can be used with other rule sets (in fact it is designed to be used with the Trustwave commercial rules, for instance) it is important that no two rulesets have overlapping ID ranges.</description></item><item><title>Configuration</title><link>https://fzipi.github.io/coreruleset-documentation/deployment/configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fzipi.github.io/coreruleset-documentation/deployment/configuration/</guid><description>Configuring OWASP CRS TODO</description></item><item><title>Rules</title><link>https://fzipi.github.io/coreruleset-documentation/deployment/rules/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fzipi.github.io/coreruleset-documentation/deployment/rules/</guid><description>What&amp;rsquo;s In The Rules | REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf.example | Configuration Path: rules/REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf.example | This file is used to add LOCAL exceptions for your site. Often in this file we would see rules that short-circuit inspection and allow certain transactions to skip through inspection. Example: SecRule REMOTE_ADDR &amp;quot;@ipMatch 192.168.1.100&amp;quot; &amp;quot;phase:1,id:'981033',t:none,nolog,pass,ctl:ruleEngine=Off&amp;quot;| | REQUEST-901-INITIALIZATION.conf | TODO | | REQUEST-903.9001-DRUPAL-EXCLUSION-RULES.conf REQUEST-903.9002-WORDPRESS-EXCLUSION-RULES.conf REQUEST-903.9003-NEXTCLOUD-EXCLUSION-RULES.conf REQUEST-903.9004-DOKUWIKI-EXCLUSION-RULES.conf REQUEST-903.9005-CPANEL-EXCLUSION-RULES.conf REQUEST-903.9006-XENFORO-EXCLUSION-RULES.conf | TODO |
REQUEST-901-INITIALIZATION.conf TODO
REQUEST-903.9001-DRUPAL-EXCLUSION-RULES.conf REQUEST-903.9002-WORDPRESS-EXCLUSION-RULES.conf REQUEST-903.9003-NEXTCLOUD-EXCLUSION-RULES.conf REQUEST-903.9004-DOKUWIKI-EXCLUSION-RULES.conf REQUEST-903.9005-CPANEL-EXCLUSION-RULES.conf REQUEST-903.9006-XENFORO-EXCLUSION-RULES.conf TODO</description></item><item><title>Adding Exceptions and Tuning CRS</title><link>https://fzipi.github.io/coreruleset-documentation/deployment/exceptions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fzipi.github.io/coreruleset-documentation/deployment/exceptions/</guid><description>Modifying Rules OWASP Core Rule Set (CRS) as a rule set for ModSecurity has no context into what your web application is doing and how it is designed. As a result, often legitimate requests might seem to CRS to be attacks. This term is often called a False Positive. While the CRS team does its best to prevent these from happening, they are somewhat inevitable due to the blacklist nature of the rules.</description></item><item><title>Testing the Rule Set</title><link>https://fzipi.github.io/coreruleset-documentation/deployment/testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fzipi.github.io/coreruleset-documentation/deployment/testing/</guid><description>Shipped with the ruleset are a number of different tools. One of these tools are the regression testing framework for OWASP CRS. For testing we use WTF (WAF Testing Framework). This framework allows us to specify HTTP requests via a YAML file. Each modification to CRS must pass the existing tests in order to be accepted. Additionally, if you are planning to add a rule, you should ensure that a test has been written.</description></item><item><title>Anomaly Scoring Mode</title><link>https://fzipi.github.io/coreruleset-documentation/deployment/anomaly/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fzipi.github.io/coreruleset-documentation/deployment/anomaly/</guid><description>OWASP CRS version 3.x allows users to quickly switch between Traditional and Anomaly Scoring detection modes. The default starting with CRS 3.x is Anomaly Scoring mode. Within the csr-setup.conf.example file there are two settings to control which mode your CRS instance will work in. Within this file, you can also control the following related CRS items:
Anomaly Scoring Severity Levels Anomaly Scoring Threshold Levels (Blocking) Enable/Disable Blocking Choose the default logging actions and much more!</description></item><item><title>Still need help?</title><link>https://fzipi.github.io/coreruleset-documentation/deployment/support/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fzipi.github.io/coreruleset-documentation/deployment/support/</guid><description>Open Source/Free Help ModSecurity Users Mail-list (SourceForge) - http://lists.sourceforge.net/lists/listinfo/mod-security-users ModSecurity Developers Mail-list (SourceForge) - http://lists.sourceforge.net/lists/listinfo/mod-security-developers OWASP ModSecurity Core Rules Mail-list (OWASP) - https://lists.owasp.org/mailman/listinfo/owasp-modsecurity-core-rule-set You can also join the #modsecurity channel on irc.freenode.net. Commercial Help Commercial Support through Trustwave's Technical Assistance Center (TAC) - https://www3.trustwave.com/modsecurity-rules-support.php Professional Services offer by Trustwave SpiderLabs Research Team ModSecurity Training Books about ModSecurity ModSecurity Handbook
ModSecurity Handbook is &amp;ldquo;The definitive guide to the popular open source web application firewall&amp;rdquo;, written by Ivan Ristic (original author of ModSecurity).</description></item><item><title>Making</title><link>https://fzipi.github.io/coreruleset-documentation/deployment/making/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fzipi.github.io/coreruleset-documentation/deployment/making/</guid><description>Making Rules The Basic Synatax A SecRule is a directive like any other understood by ModSecurity. The difference is that this directive is way more powerful in what it is capable of representing. Generally, a SecRule is made up of 4 parts: * Variables - Instructs ModSecurity where to look (sometimes called Targets) * Operators - Instructs ModSecurity when to trigger a match * Transformations - Instructs ModSecurity how it should normalize variable data * Actions - Instructs ModSecurity what to do if a rule matches</description></item><item><title>Metadata</title><link>https://fzipi.github.io/coreruleset-documentation/deployment/metadata/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fzipi.github.io/coreruleset-documentation/deployment/metadata/</guid><description>OWASP CRS Metadata OWASP CRS 3.x includes several pieces of metadata within rules. Not every rule features all metadata but it is a continuing project where possible to update this information to the best possible level. If you see a rule without a piece of metadata that you think is warranted please open either an issue request at https://github.com/SpiderLabs/owasp-modsecurity-crs/issues or a pull request.
Tags about standards We try our best to outline information about the vulnerability when each rule triggers.</description></item></channel></rss>