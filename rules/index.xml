<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Creating Rules on Core Rule Set Documentation</title><link>https://coreruleset.github.io/documentation/rules/</link><description>Recent content in Creating Rules on Core Rule Set Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://coreruleset.github.io/documentation/rules/index.xml" rel="self" type="application/rss+xml"/><item><title>Rules</title><link>https://coreruleset.github.io/documentation/rules/rules/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coreruleset.github.io/documentation/rules/rules/</guid><description>What&amp;rsquo;s In The Rules | REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf.example | Configuration Path: rules/REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf.example | This file is used to add LOCAL exceptions for your site. Often in this file we would see rules that short-circuit inspection and allow certain transactions to skip through inspection. Example: SecRule REMOTE_ADDR &amp;quot;@ipMatch 192.168.1.100&amp;quot; &amp;quot;phase:1,id:'981033',t:none,nolog,pass,ctl:ruleEngine=Off&amp;quot;| | REQUEST-901-INITIALIZATION.conf | TODO | | REQUEST-903.9001-DRUPAL-EXCLUSION-RULES.conf REQUEST-903.9002-WORDPRESS-EXCLUSION-RULES.conf REQUEST-903.9003-NEXTCLOUD-EXCLUSION-RULES.conf REQUEST-903.9004-DOKUWIKI-EXCLUSION-RULES.conf REQUEST-903.9005-CPANEL-EXCLUSION-RULES.conf REQUEST-903.9006-XENFORO-EXCLUSION-RULES.conf | TODO |
REQUEST-901-INITIALIZATION.conf TODO
REQUEST-903.9001-DRUPAL-EXCLUSION-RULES.conf REQUEST-903.9002-WORDPRESS-EXCLUSION-RULES.conf REQUEST-903.9003-NEXTCLOUD-EXCLUSION-RULES.conf REQUEST-903.9004-DOKUWIKI-EXCLUSION-RULES.conf REQUEST-903.9005-CPANEL-EXCLUSION-RULES.conf REQUEST-903.9006-XENFORO-EXCLUSION-RULES.conf TODO</description></item><item><title>Making</title><link>https://coreruleset.github.io/documentation/rules/creating/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coreruleset.github.io/documentation/rules/creating/</guid><description>Making Rules The Basic Synatax A SecRule is a directive like any other understood by ModSecurity. The difference is that this directive is way more powerful in what it is capable of representing. Generally, a SecRule is made up of 4 parts:
Variables - Instructs ModSecurity where to look (sometimes called Targets) Operators - Instructs ModSecurity when to trigger a match Transformations - Instructs ModSecurity how it should normalize variable data Actions - Instructs ModSecurity what to do if a rule matches The structure of the rule is as follows:</description></item></channel></rss>